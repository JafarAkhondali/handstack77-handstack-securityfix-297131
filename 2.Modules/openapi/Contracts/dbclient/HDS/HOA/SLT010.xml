<?xml version="1.0" encoding="UTF-8"?>
<mapper xmlns="contract.xsd">
    <header>
        <application>HDS</application>
        <project>HOA</project>
        <transaction>SLT010</transaction>
        <datasource>OPENAPIDB</datasource>
        <use>Y</use>
        <desc>SQLite OpenAPI 관리 기본 거래</desc>
    </header>
    <commands>
        <statement id="ZD01" seq="0" use="Y" timeout="0" desc="OpenAPI 서비스 테이블 DDL 및 초기 데이터 입력 적용">
            <![CDATA[
CREATE TABLE "AccessMemberAPI" (
    -- API 접근 ID
    "AccessID" TEXT NOT NULL CONSTRAINT "PK_AccessMemberAPI" PRIMARY KEY,

    -- API 서비스 ID
    "APIServiceID" TEXT NULL,

    -- 회원 ID
    "MemberID" TEXT NULL,

    -- 접근 비밀키
    "SecretKey" TEXT NULL,

    -- LimitIPAddressYN == Y 인 경우 적용
    "IPAddress" TEXT NULL,

    -- Day, Month, Infinite
    "LimitPeriod" TEXT NULL,

    -- 제한 횟수
    "LimitCallCount" INTEGER NULL,

    -- 요청 횟수
    "RequestCallCount" INTEGER NULL,

    -- 전체 요청 횟수
    "CumulativeCallCount" INTEGER NULL,

    -- 사용 유무
    "UseYN" TEXT NULL,

    -- 삭제 유무
    "DeleteYN" TEXT NULL,

    -- 입력 일시
    "CreatedAt" TEXT NULL
);


CREATE TABLE "APIParameter" (
    -- API 서비스 ID
    "APIServiceID" TEXT NOT NULL,

    -- 매개변수 ID
    "ParameterID" TEXT NOT NULL,

    -- 매개변수 데이터 타입
    "ParameterType" TEXT NULL,

    -- 길이
    "Length" INTEGER NULL,

    -- 기본값
    "DefaultValue" TEXT NULL,

    -- 필수 유무
    "RequiredYN" TEXT NULL,

    -- 정렬순서
    "SortingNo" INTEGER NULL,

    -- 매개변수 설명
    "Comment" TEXT NULL,
    CONSTRAINT "PK_APIParameter" PRIMARY KEY ("APIServiceID", "ParameterID")
);


CREATE TABLE "APIResponseScheme" (
    -- API 서비스 ID
    "APIServiceID" TEXT NOT NULL,

    -- 컬럼 ID
    "ColumnID" TEXT NOT NULL,

    -- 컬럼 데이터 타입
    "ColumnType" TEXT NULL,

    -- 컬럼명
    "ColumnText" TEXT NULL,

    -- 설명
    "Comment" TEXT NULL,
    CONSTRAINT "PK_APIResponseScheme" PRIMARY KEY ("APIServiceID", "ColumnID")
);


CREATE TABLE "APIService" (
    -- GUID
    "APIServiceID" TEXT NOT NULL CONSTRAINT "PK_APIService" PRIMARY KEY,

    -- 인터페이스 ID
    "InterfaceID" TEXT NOT NULL,

    -- 인터페이스명
    "InterfaceName" TEXT NULL,

    -- 데이터 소스 ID
    "DataSourceID" TEXT NULL,

    -- 명령 구문
    "CommandText" TEXT NULL,

    -- HTML 내용으로 API 서비스 설명
    "Descriptions" TEXT NULL,

    -- 기본 데이터 포맷
    "DefaultFormat" TEXT NULL,

    -- Format을 지정하지 않으면 기본값 (Y)으로 적용
    "FormatJsonYN" TEXT NULL,

    -- Xml 지원 유무
    "FormatXmlYN" TEXT NULL,

    -- Soap 지원 유무
    "FormatSoapYN" TEXT NULL,

    -- Rss 지원 유무
    "FormatRssYN" TEXT NULL,

    -- Atom 지원 유무
    "FormatAtomYN" TEXT NULL,

    -- Day, Month, Infinite
    "LimitPeriod" TEXT NULL,

    -- 제한 요청 횟수
    "LimitCallCount" INTEGER NULL,

    -- 제한 IP 주소 유무
    "LimitIPAddressYN" TEXT NULL,

    -- Public, SecretKey
    "AccessControl" TEXT NULL,

    -- 요청 횟수 합계
    "CumulativeCallCount" INTEGER NULL,

    -- 캐시 지속 간격 (분)
    "CacheDuration" INTEGER NULL,

    -- 사용 유무
    "UseYN" TEXT NULL,

    -- 삭제 유무
    "DeleteYN" TEXT NULL,

    -- 입력 일시
    "CreatedAt" TEXT NULL,
    CONSTRAINT "AK_APIService_InterfaceID" UNIQUE ("InterfaceID")
);


CREATE TABLE "DataSource" (
    -- 데이터소스ID
    "DataSourceID" TEXT NOT NULL CONSTRAINT "PK_DataSource" PRIMARY KEY,

    -- 데이터제공자
    "DataProvider" TEXT NULL,

    -- 연결문자열
    "ConnectionString" TEXT NULL,

    -- 연결문자열 암호화 여부
    "IsEncryption" TEXT NULL,

    -- 설명
    "Comment" TEXT NULL,

    -- 입력일시
    "CreatedAt" TEXT NULL
);


CREATE TABLE "UsageAPIAggregate" (
    -- 요청 년도
    "RequestYear" INTEGER NOT NULL,

    -- 요청 월
    "RequestMonth" INTEGER NOT NULL,

    -- 요청 일
    "RequestDay" INTEGER NOT NULL,

    -- 요청 시간
    "RequestHour" INTEGER NOT NULL,

    -- API 서비스 ID
    "APIServiceID" TEXT NOT NULL,

    -- API 접근 ID
    "AccessID" TEXT NOT NULL,

    -- APIService Format중 Json, Xml, Soap, Rss, Atom 하나
    "Format" TEXT NULL,

    -- 전체 요청 횟수
    "CumulativeCallCount" INTEGER NULL,

    -- 최근 요청 일시
    "ModifiedAt" TEXT NULL,
    CONSTRAINT "PK_UsageAPIAggregate" PRIMARY KEY ("RequestYear", "RequestMonth", "RequestDay", "RequestHour", "APIServiceID", "AccessID")
);


CREATE INDEX "IX_AccessMemberAPI_APIServiceID_MemberID" ON "AccessMemberAPI" ("APIServiceID", "MemberID");
			]]>
        </statement>

        <statement id="GD01" seq="0" use="Y" timeout="0" desc="데이터베이스 현재 시간 및 서버명 조회">
            <![CDATA[
SELECT DATETIME('now', 'localtime') AS ServerDate, 'localhost' AS ServerName;
			]]>
        </statement>

        <statement id="GD02" seq="0" use="Y" timeout="0" desc="데이터베이스 내 테이블 유무 확인">
            <![CDATA[
SELECT COUNT(*) AS IsExists FROM sqlite_master WHERE type='table' AND name = @TableName;
			]]>
            <param id="@TableName" type="String" length="36" value="" />
        </statement>

        <statement id="GD03" seq="0" use="Y" timeout="0" desc="API Service 조회">
            <![CDATA[
SELECT A.APIServiceID
    , A.InterfaceID
    , A.InterfaceName
    , A.DataSourceID
    , A.CommandText
    , A.Descriptions
    , A.DefaultFormat
    , A.FormatJsonYN
    , A.FormatXmlYN
    , A.FormatSoapYN
    , A.FormatRssYN
    , A.FormatAtomYN
    , A.LimitPeriod
    , A.LimitCallCount
    , A.LimitIPAddressYN
    , A.AccessControl
    , A.CacheDuration
FROM 
    APIService A
WHERE A.UseYN = 'Y'
    AND A.DeleteYN = 'N'
    AND A.InterfaceID = @InterfaceID;
			]]>
            <param id="@InterfaceID" type="String" length="50" value="" />
        </statement>

        <statement id="GD04" seq="0" use="Y" timeout="0" desc="DataSourceID 조회">
            <![CDATA[
SELECT DS.DataSourceID
    , DS.DataProvider
    , DS.ConnectionString
    , DS.IsEncryption
FROM 
    DataSource DS
WHERE DS.DataSourceID = @DataSourceID;
			]]>
            <param id="@DataSourceID" type="String" length="10" value="" />
        </statement>

        <statement id="GD05" seq="0" use="Y" timeout="0" desc="사용자 접근키 정보 조회">
            <![CDATA[
SELECT AMA.AccessID
    , AMA.MemberNo
    , AMA.SecretKey
    , AMA.IPAddress
    , AMA.LimitPeriod
    , AMA.LimitCallCount
    , AMA.RequestCallCount
    , AMA.CumulativeCallCount
FROM 
    APIService A
	INNER JOIN AccessMemberAPI AMA ON A.APIServiceID = AMA.APIServiceID
WHERE A.UseYN = 'Y'
    AND A.DeleteYN = 'N'
    AND AMA.UseYN = 'Y'
    AND AMA.DeleteYN = 'N'
    AND A.APIServiceID = @APIServiceID
	AND AMA.AccessID = @AccessID;
			]]>
            <param id="@APIServiceID" type="String" length="36" value="" />
            <param id="@AccessID" type="String" length="36" value="" />
        </statement>

        <statement id="LD01" seq="0" use="Y" timeout="0" desc="API Service Parameter 목록 조회">
            <![CDATA[
SELECT AP.ParameterID
    , AP.ParameterType
    , AP.Length
    , AP.DefaultValue
    , AP.RequiredYN
FROM 
    APIParameter AP
WHERE AP.APIServiceID = @APIServiceID;
			]]>
            <param id="@APIServiceID" type="String" length="36" value="" />
        </statement>

        <statement id="MD01" seq="0" use="Y" timeout="0" desc="API 사용 통계 갱신">
            <![CDATA[
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETDATE();

DECLARE @RequestYear INT, @RequestMonth INT, @RequestDay INT, @RequestHour INT;

SET @RequestYear = YEAR(@CurrentDate);
SET @RequestMonth = MONTH(@CurrentDate);
SET @RequestDay = DAY(@CurrentDate);
SET @RequestHour = DATEPART(HOUR, @CurrentDate);

MERGE INTO UsageAPIAggregate AS T
USING (
    SELECT @RequestYear, @RequestMonth, @RequestDay, @RequestHour, @APIServiceID, @AccessID, @Format
    ) AS S(RequestYear, RequestMonth, RequestDay, RequestHour, APIServiceID, AccessID, [Format])
    ON S.RequestYear = T.RequestYear
        AND S.RequestMonth = T.RequestMonth
        AND S.RequestDay = T.RequestDay
        AND S.RequestHour = T.RequestHour
        AND S.AccessID = T.AccessID
WHEN NOT MATCHED
    THEN
    INSERT (RequestYear
		, RequestMonth
		, RequestDay
		, RequestHour
		, APIServiceID
		, AccessID
		, [Format]
		, CumulativeCallCount
		, ModifiedAt
	) 
	VALUES (@RequestYear
		, @RequestMonth
		, @RequestDay
		, @RequestHour
		, @APIServiceID
		, @AccessID
		, @Format
		, 1
		, GETDATE()
	)
WHEN MATCHED
    THEN
    UPDATE SET CumulativeCallCount = (CumulativeCallCount + 1)
		, ModifiedAt = GETDATE();
        
UPDATE APIService SET CumulativeCallCount = (CumulativeCallCount + 1)
WHERE APIServiceID = @APIServiceID;

UPDATE AccessMemberAPI SET CumulativeCallCount = (CumulativeCallCount + 1)
    , RequestCallCount = (RequestCallCount + 1)
WHERE APIServiceID = @APIServiceID
	AND AccessID = @AccessID;
			]]>
            <param id="@APIServiceID" type="String" length="36" value="" />
            <param id="@AccessID" type="String" length="36" value="" />
            <param id="@Format" type="String" length="10" value="" />
        </statement>

        <statement id="UD01" seq="0" use="Y" timeout="0" desc="기간 내 호출 수 제한 조건 일일 자동 갱신">
            <![CDATA[
UPDATE AccessMemberAPI 
SET LimitCallCount = (
    SELECT A.LimitCallCount
    FROM APIService A
    WHERE A.UseYN = 'Y'
        AND A.DeleteYN = 'N'
        AND A.APIServiceID = AccessMemberAPI.APIServiceID
        AND A.LimitPeriod = :LimitPeriod
),
LimitPeriod = (
    SELECT A.LimitPeriod
    FROM APIService A
    WHERE A.UseYN = 'Y'
        AND A.DeleteYN = 'N'
        AND A.APIServiceID = AccessMemberAPI.APIServiceID
        AND A.LimitPeriod = :LimitPeriod
),
RequestCallCount = 0
WHERE EXISTS (
    SELECT 1
    FROM APIService A
    WHERE A.UseYN = 'Y'
        AND A.DeleteYN = 'N'
        AND A.APIServiceID = AccessMemberAPI.APIServiceID
        AND A.LimitPeriod = :LimitPeriod
);
			]]>
            <param id="@LimitPeriod" type="String" length="10" value="" />
        </statement>
    </commands>
</mapper>